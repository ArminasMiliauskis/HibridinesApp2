{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Armin\\\\Desktop\\\\HibridinesApp2\\\\lib\\\\components\\\\CommentComponent.jsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ButtonComponent from \"./ButtonComponent\";\nexport default function CommentComponent(_ref) {\n  var _this = this;\n\n  var comments = _ref.comments;\n\n  var _useState = useState('ra≈°yti komentara...'),\n      _useState2 = _slicedToArray(_useState, 2),\n      newComment = _useState2[0],\n      onChangeComment = _useState2[1];\n\n  var _useState3 = useState('Anonimas'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      onChangeName = _useState4[1];\n\n  var _useState5 = useState(comments),\n      _useState6 = _slicedToArray(_useState5, 2),\n      commentArray = _useState6[0],\n      setCommentArray = _useState6[1];\n\n  var onButtonPressed = function onButtonPressed() {\n    var commentText = '{ \"name\": ' + '\"' + name + '\"' + ', \"comment\": ' + '\"' + newComment + '\"' + ' }';\n    var commentObj = JSON.parse(commentText);\n    setCommentArray([].concat(_toConsumableArray(commentArray), [commentObj]));\n  };\n\n  return React.createElement(View, {\n    style: styles.commentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.commentsTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"KOMENTARAI\"), React.createElement(View, {\n    style: styles.commentInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"PRID\\u0116TI KOMENTAR\\u0104\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"vardas:\"), React.createElement(TextInput, {\n    style: styles.commentInput,\n    onChangeText: function onChangeText(text) {\n      return onChangeName(text);\n    },\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"komentaras:\"), React.createElement(TextInput, {\n    style: styles.commentInput,\n    onChangeText: function onChangeText(text) {\n      return onChangeComment(text);\n    },\n    value: newComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      margin: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, React.createElement(ButtonComponent, {\n    title: \"Submit comment\",\n    onPress: onButtonPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  })))), React.createElement(View, {\n    style: styles.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, commentArray.map(function (comment) {\n    return React.createElement(View, {\n      style: styles.commentCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.commentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, comment.name), React.createElement(Text, {\n      style: styles.commentContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Sako: \", comment.comment));\n  })));\n}\nvar styles = StyleSheet.create({\n  commentContainer: {\n    borderWidth: 3,\n    borderRadius: 10,\n    width: \"90%\"\n  },\n  comments: {\n    padding: 10\n  },\n  commentsTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  commentCard: {\n    borderWidth: 1,\n    marginBottom: 2\n  },\n  commentName: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    paddingLeft: 10,\n    borderWidth: 0.2\n  },\n  commentContent: {\n    fontSize: 16,\n    paddingLeft: 10\n  },\n  commentInputContainer: {\n    borderWidth: 3,\n    borderRadius: 10,\n    width: \"90%\",\n    marginLeft: 10\n  },\n  commentInput: {\n    height: 40,\n    borderColor: 'grey',\n    borderWidth: 1,\n    marginBottom: 10,\n    marginLeft: 10,\n    marginRight: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Armin/Desktop/HibridinesApp2/lib/components/CommentComponent.jsx"],"names":["React","useState","ButtonComponent","CommentComponent","comments","newComment","onChangeComment","name","onChangeName","commentArray","setCommentArray","onButtonPressed","commentText","commentObj","JSON","parse","styles","commentContainer","commentsTitle","commentInputContainer","textAlign","marginLeft","commentInput","text","margin","map","comment","commentCard","commentName","commentContent","StyleSheet","create","borderWidth","borderRadius","width","padding","fontSize","fontWeight","marginBottom","paddingLeft","height","borderColor","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput } from 'react-native';\n\nimport ButtonComponent from './ButtonComponent';\n\n\nexport default function CommentComponent({ comments }) {\n\n    const [newComment, onChangeComment] = useState('ra≈°yti komentara...');\n    const [name, onChangeName] = useState('Anonimas');\n    const [commentArray, setCommentArray] = useState(comments);\n\n    const onButtonPressed = () => { \n        let commentText = '{ \"name\": ' + '\"' + name + '\"'  + ', \"comment\": ' + '\"' + newComment + '\"' + ' }';\n        let commentObj = JSON.parse(commentText);\n        setCommentArray([...commentArray, commentObj]);\n        // comments.push(commentObj);\n        // console.log(commentText);\n    }\n    return (\n        <View style={styles.commentContainer}>\n            <Text style={styles.commentsTitle}>KOMENTARAI</Text>\n            {/* comment input??? */}\n            <View style={styles.commentInputContainer}>\n                <Text style={{ textAlign: \"center\" }}>PRIDƒñTI KOMENTARƒÑ</Text>\n                <View>\n                    <Text style={{ marginLeft: 10 }}>vardas:</Text>\n                    <TextInput\n                        style={styles.commentInput}\n                        onChangeText={text => onChangeName(text)}\n                        value={name}\n                    />\n                    <Text style={{ marginLeft: 10 }}>komentaras:</Text>\n                    <TextInput\n                        style={styles.commentInput}\n                        onChangeText={text => onChangeComment(text)}\n                        value={newComment}\n                    />\n                    <View style={{ margin: 5 }}>\n                        <ButtonComponent title=\"Submit comment\" onPress={onButtonPressed} />\n                    </View>\n                </View>\n\n            </View>\n            {/* all comments */}\n            <View style={styles.comments}>\n                {commentArray.map((comment) => {\n                    return (\n                        <View style={styles.commentCard}>\n                            <Text style={styles.commentName}>{comment.name}</Text>\n                            <Text style={styles.commentContent}>Sako: {comment.comment}</Text>\n                        </View>\n                    );\n                })}\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    commentContainer: {\n        borderWidth: 3,\n        borderRadius: 10,\n        width: \"90%\",\n    },\n    comments: {\n        padding: 10,\n        // backgroundColor: 'green',\n    },\n    commentsTitle: {\n        fontSize: 20,\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n    },\n    commentCard: {\n        borderWidth: 1,\n        marginBottom: 2,\n        // paddingLeft: 10,\n    },\n    commentName: {\n        fontSize: 18,\n        fontWeight: \"bold\",\n        paddingLeft: 10,\n        borderWidth: 0.2,\n    },\n    commentContent: {\n        fontSize: 16,\n        paddingLeft: 10,\n    },\n    commentInputContainer: {\n        borderWidth: 3,\n        borderRadius: 10,\n        width: \"90%\",\n        marginLeft: 10,\n    },\n    commentInput: {\n        height: 40,\n        borderColor: 'grey',\n        borderWidth: 1,\n        marginBottom: 10,\n        marginLeft: 10,\n        marginRight: 10,\n    }\n\n})"]},"metadata":{},"sourceType":"module"}